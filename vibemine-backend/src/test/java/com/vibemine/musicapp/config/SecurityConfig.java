// src/main/java/com/vibemine/musicapp/config/SecurityConfig.java

package com.vibemine.musicapp.config;

import com.vibemine.musicapp.service.AuthService;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

    private final AuthService authService;
    
    public SecurityConfig(AuthService authService) {
        this.authService = authService;
    }

    /**
     * C·∫•u h√¨nh PasswordEncoder (BCrypt l√† b·∫Øt bu·ªôc ƒë·ªÉ hash m·∫≠t kh·∫©u)
     */
    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    }

    /**
     * C·∫•u h√¨nh chu·ªói Filter B·∫£o m·∫≠t ƒë∆°n gi·∫£n (Cho ph√©p m·ªçi request truy c·∫≠p)
     */
    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        http
            .csrf(csrf -> csrf.disable()) // V√¥ hi·ªáu h√≥a CSRF
            .authorizeHttpRequests(auth -> auth
                .anyRequest().permitAll() // üåü CHO PH√âP T·∫§T C·∫¢ REQUEST TRUY C·∫¨P üåü
            );

        return http.build();
    }
    
    // Gi·ªØ l·∫°i UserDetailsService ƒë·ªÉ AuthService c√≥ th·ªÉ ho·∫°t ƒë·ªông
    // (M·∫∑c d√π n√≥ kh√¥ng ƒë∆∞·ª£c d√πng ƒë·ªÉ l·ªçc request)
    @Bean
    public UserDetailsService userDetailsService() {
        return username -> authService.findUserByUsername(username)
                .orElseThrow(() -> new UsernameNotFoundException("Kh√¥ng t√¨m th·∫•y User v·ªõi username: " + username));
    }
}